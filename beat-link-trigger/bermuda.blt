{:beat-link-trigger-version "7.4.1",
 :triggers [{:bar true,
             :start "Start",
             :channel 1,
             :start-stop false,
             :note 127,
             :gear false,
             :stop true,
             :comment "",
             :outputs #beat_link_trigger.util.MidiChoice{:full-name "Microsoft GS Wavetable Synth"},
             :send true,
             :players #beat_link_trigger.util.PlayerChoice{:number -1},
             :enabled "Always",
             :message "Note"}
            {:bar true,
             :start "Start",
             :channel 1,
             :start-stop false,
             :note 127,
             :gear false,
             :stop true,
             :comment "Phrase Triggers?",
             :outputs #beat_link_trigger.util.MidiChoice{:full-name "Microsoft GS Wavetable Synth"},
             :send true,
             :players #beat_link_trigger.util.PlayerChoice{:number 0},
             :enabled "Custom",
             :message "Note"}
            {:bar true,
             :start "Start",
             :channel 1,
             :start-stop false,
             :note 127,
             :gear false,
             :stop true,
             :expressions {:beat "(let [payload {\"masterPlayerNumber\" device-number\n               \"bpm\"                effective-tempo\n               \"trackTitle\"         track-title\n               \"beat\"               beat-within-bar}]\n  (send-json-to-touchdesigner globals payload))"},
             :comment "",
             :outputs #beat_link_trigger.util.MidiChoice{:full-name "Microsoft GS Wavetable Synth"},
             :send true,
             :players #beat_link_trigger.util.PlayerChoice{:number -1},
             :enabled "Custom",
             :message "Note"}],
 :window-positions {:triggers [2086 825 775 372],
                    :carabiner [1992 815]},
 :expressions {:setup ";; Create a socket for sending UDP to TouchDesigner, and record the\n;; address and port to which such UDP messages should be sent.\n(swap! globals assoc :td-socket (java.net.DatagramSocket.))\n(swap! globals assoc :td-address (java.net.InetAddress/getLocalHost))\n(swap! globals assoc :td-port 7000)",
               :shared "(defn send-json-to-touchdesigner\n  \"Encodes a map as JSON and sends it in a UDP packet\n  to TouchDesigner.\"\n  [globals m]\n  (let [message (str (cheshire.core/encode m) \"\\n\")  ; Encode as JSON line.\n       {:keys [td-address td-port td-socket]} @globals  ; Find where to send.\n       data (.getBytes message)  ; Get JSON as raw byte array.\n       packet (java.net.DatagramPacket. data (count data) td-address td-port)]\n  (.send td-socket packet)))"}}
